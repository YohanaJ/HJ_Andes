# Set working directory
setwd("C:/Users")

# Load required libraries
library(tidyr)
library(dplyr)
library(vegan)
library(ggplot2)
library(reshape2)
library(ggpmisc)

### ----------------------- Data Import -----------------------

# Read input CSV files
geogr         <- read.csv("distance_geographic.csv")
polit_proport <- read.csv("politicalproportion.csv")
clima     <- read.csv("Ecoregions_climate_stats.csv")
jaccard       <- read.csv("Jaccard_Homogenization_Results.csv")

### ------------------ Histogram of Homogenization Index ------------------



# Filter jaccard data to remove zero HI values for a refined histogram
jaccard_filtered <- subset(jaccard, HI!= 0)

p_hi <- ggplot(jaccard_filtered, aes(x = HI, fill = HI > 0)) +
  geom_histogram(binwidth = 0.00005, color = "black", alpha = 0.7) +
  scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "black", size = 0.5) +
  labs(x = "Homogenization Index", y = "Count") +
  theme_minimal() +
  theme(text = element_text(size = 12)) +
  guides(fill = "none")
print(p_hi)
# Uncomment below to save the histogram
# ggsave("histogram_HI.jpeg", plot = p_hi, width = 8, height = 6, dpi = 300)

### ----------------------- Data Cleaning and Preparation -----------------------

# Subset and rename jaccard data columns
jaccard <- jaccard %>%
  select(1, 2, 4, 5, 6) %>%  # select desired columns
  na.omit() %>%             # remove NA rows
  rename(
    ecoregion1   = 1,
    ecoregion2   = 2,
    nat_distance = 3,
    exo_distance = 4,
    hi           = 5
  ) %>%
  # Replace spaces with periods in ecoregion2 names for consistency
  mutate(ecoregion2 = gsub(" ", ".", ecoregion2))

# Prepare climatic data by selecting columns and computing Euclidean distances.

clima_dist <- vegdist(clima[, 2:7], method = "euclidean", na.rm = TRUE)
clima_dist <- as.matrix(clima_dist)
clima_dist <- as.data.frame(clima_dist)
rownames(clima_dist) <- clima$ECO_NAME
colnames(clima_dist) <- clima$ECO_NAME

# Convert the climatic distance matrix to long format
clima_dist_long <- melt(as.matrix(clima_dist), varnames = c("ECO_NAME1", "ECO_NAME2"), value.name = "distance") %>%
  rename(ecoregion1 = ECO_NAME1, ecoregion2 = ECO_NAME2) %>%
  # Replace spaces with periods in ecoregion2 names
  mutate(ecoregion2 = gsub(" ", ".", ecoregion2)) %>%
  rename(climatic_distance = distance)

# Clean up political proportion data: replace spaces in ecoregion2 and rename column
polit_proport <- polit_proport %>%
  mutate(ecoregion2 = gsub(" ", ".", ecoregion2)) %>%
  rename(political_proportion = proportion)

# Convert geographic distances to long format
geog_long <- geogr %>%
  pivot_longer(cols = -1, names_to = "ecoregion2", values_to = "value") %>%
  rename(ecoregion1 = 1) %>%
  filter(ecoregion1 != ecoregion2) %>%  # Remove self-comparisons
  rename(geographic_distance = value)

### ----------------------- Merge Datasets -----------------------

# Merge all datasets by common ecoregion identifiers
merged_data <- jaccard %>%
  left_join(clima_dist_long, by = c("ecoregion1", "ecoregion2")) %>%
  left_join(geog_long, by = c("ecoregion1", "ecoregion2")) %>%
  left_join(polit_proport, by = c("ecoregion1", "ecoregion2"))


# Standardize (scale) climatic and geographic distances to a 0-1 range for comparability
merged_data <- merged_data %>%
  mutate(
    climatic_distance_scaled = (climatic_distance - min(climatic_distance, na.rm = TRUE)) / (max(climatic_distance, na.rm = TRUE) - min(climatic_distance, na.rm = TRUE)),
    geographic_distance_scaled = (geographic_distance - min(geographic_distance, na.rm = TRUE)) / (max(geographic_distance, na.rm = TRUE) - min(geographic_distance, na.rm = TRUE))
  )

### ----------------------- Plotting -----------------------

# Helper function to generate regression plots with equation annotation
plot_regression <- function(data, x, y, title_text, xlab, ylab) {
  ggplot(data, aes_string(x = x, y = y)) +
    stat_poly_eq(formula = y ~ x,
                 aes(label = paste(..eq.label.., ..rr.label.., ..p.value.label.., sep = "~~~")),
                 size = 2.5, parse = TRUE) +
    geom_point(size = 1) +
    stat_poly_line() +
    labs(title = title_text, x = xlab, y = ylab) +
    theme_grey(base_size = 9) +
    theme(plot.title = element_text(hjust = 0, size = 10, face = "bold"))
}

# Regression plots for Homogenization Index 
p_a <- plot_regression(merged_data, 
                       x = "geographic_distance_scaled", y = "hi",
                       title_text = "a)", 
                       xlab = "Geographic Distance (scaled)", 
                       ylab = "Hj")
# Uncomment to save if needed
# ggsave("hi_geo.jpeg", plot = p_a, width = 10, height = 10, units = "cm", dpi = 400)

p_b <- plot_regression(merged_data, 
                       x = "climatic_distance_scaled", y = "hi",
                       title_text = "b)", 
                       xlab = "Climatic Distance (scaled)", 
                       ylab = "Hj")
# p_c: Using political distance for homogenization index
p_c <- plot_regression(merged_data, 
                       x = "political_proportion", y = "hi",
                       title_text = "c)", 
                       xlab = "Jaccard index Countries", 
                       ylab = "Hj")
ggsave("hi_poli_prop.jpeg", plot = p_c, width = 10, height = 10, units = "cm", dpi = 400)

# Regression plots for Native Species (log_nat)
p_nat_geo <- plot_regression(merged_data, 
                             x = "geographic_distance_scaled", y = "nat_distance",
                             title_text = "Native species", 
                             xlab = "Geographic Distance (scaled)", 
                             ylab = "Jaccard Native Species")
# ggsave("native_geo.jpeg", plot = p_nat_geo, width = 10, height = 10, units = "cm", dpi = 400)

p_nat_clim <- plot_regression(merged_data, 
                              x = "climatic_distance_scaled", y = "nat_distance",
                              title_text = "Native species", 
                              xlab = "Climatic Distance (scaled)", 
                              ylab = "Jaccard Native Species")
# ggsave("native_clim.jpeg", plot = p_nat_clim, width = 10, height = 10, units = "cm", dpi = 400)

p_nat_pol <- plot_regression(merged_data, 
                             x = "political_proportion", y = "nat_distance",
                             title_text = "Native species", 
                             xlab = "Jaccard index Countries", 
                             ylab = "Jaccard Native Species")

# Regression plots for Non-native Species (log_exo)
p_exo_geo <- plot_regression(merged_data, 
                             x = "geographic_distance_scaled", y = "exo_distance",
                             title_text = "Non-native species", 
                             xlab = "Geographic Distance (scaled)", 
                             ylab = "Jaccard Non-native Species")
# ggsave("exotic_geo.jpeg", plot = p_exo_geo, width = 10, height = 10, units = "cm", dpi = 400)

p_exo_clim <- plot_regression(merged_data, 
                              x = "climatic_distance_scaled", y = "exo_distance",
                              title_text = "Non-native species", 
                              xlab = "Climatic Distance (scaled)", 
                              ylab = "Jaccard Non-native Species")
# ggsave("exotic_clim.jpeg", plot = p_exo_clim, width = 10, height = 10, units = "cm", dpi = 400)

p_exo_pol <- plot_regression(merged_data, 
                             x = "political_proportion", y = "exo_distance",
                             title_text = "Non-native species", 
                             xlab = "Jaccard index Countries", 
                             ylab = "Jaccard Non-native Species")
ggsave("exotic_poli_prop.jpeg", plot = p_exo_pol, width = 10, height = 10, units = "cm", dpi = 400)
